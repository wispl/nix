#!/usr/bin/env sh

# Helper script to help insert and draw inkscape figures based off
# https://castel.dev/post/lecture-notes-2/
#
# Run inkfig path/to/figure to create a svg of the drawing. Saving via Ctrl + S
# automatically exports the svg as a pdf and tex file in the same directory.
#
# This requires inotifywait.
#
# When creating or editing a figure (distinction does not matter), we
# 	1. start a watcher to export pdf on save
# 	2. create a file if it does not exists or opens it
# 	3. when we finish and close inkscape, the watcher is killed
#
# NOTE: the watcher is started and killed automatically so there is no need to
# manually start and stop it.

# Watches for svg changes using inotifywait
#
# Upon updates to the svg, re-export the pdf using inkscape
watch() {
	name="${1##*/}"
	while (inotifywait -e modify "$1" -qq); do
		notify-send "Inkscape File Watch" "Detected changes on $name, re-exporting..."
		inkscape --export-area-page \
			--export-dpi 300 \
			--export-type=pdf \
			--export-latex \
			"$1"
	done
}

if [ -z "$1" ]; then
	echo "Please specify the path of the svg to open"
	exit 1
fi

# Without the inner trap, bash segfaults? See
# https://stackoverflow.com/questions/360201/how-do-i-kill-background-processes-jobs-when-my-shell-script-exits#
trap 'trap - TERM && kill -- -$$' INT TERM EXIT

# Inkscape does not automatically create a svg file if it does not exist, so we
# have to do it manually, note that `touch ___.svg` and friends do not work. So
# we have to use the inkscape command to export it ourselves.
if [ ! -f "$1" ]; then
	inkscape --actions="file-new; export-area-page; export-filename:${1}; export-do;"
fi

watch "$1" &
inkscape "$1"
