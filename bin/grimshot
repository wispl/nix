#!/usr/bin/env bash

# Screenshot
#
# Saves file in $GRIM_DEFAULT_DIR, falling back to $XDG_PICTURES_DIR and
# finally to $HOME directory.
#
# Use "grimshot screen" to take a picture of the whole screen.
# Use "grimshot area" to take a picture of an area.
#
# Add a '--copy' flag after the action to copy to clipboard instead of saving
# to file.
#
# A notification would be sent with a small preview of the screenshot after a
# successful run.
#
# Requires
# 	grim
# 	slurp
# 	notify-send
# 	date
# 	wl-copy (for --copy)

# Arguments:
# 	FILE: filename to save the file to
# 	GEOMETRY(optional): area to take a screenshot of
screenshot() {
	if [ -z "$2" ]; then
		grim "$1" || die "Unable to call grim!"
	else
		grim -g "$2" "$1" || die "Unable to call grim!"
	fi
}

# Arguments:
# 	MSG: the error message to show to the user
die() {
	MSG=${1:-No error message was given}
	notify-send -u critical "Unable to take a Screenshot!" "$MSG"
	exit 2
}

DIR=${GRIM_DEFAULT_DIR:-$XDG_PICTURES_DIR}
DIR=${DIR:-$HOME}

SCREEN="screen";
AREA="area";

ACTION=$1
COPY=$2

FILE="${DIR}/$(date +"%F_%T.png")"
GEOM=""

if [ $# -gt 2 ]; then
	die "Too many arguments!"
fi

case $ACTION in
	$SCREEN)
		GEOM=""
		;;
	$AREA)
		GEOM="$(slurp)"
		;;
	*)
		die "Please specify either 'screen' or 'area' for the action!"
		;;
esac

if [ "$COPY" = "--copy" ]; then
	FILE="-"
	screenshot "$FILE" "$GEOM" | wl-copy || die "Unable to copy the screenshot to clipboard!"
	notify-send "Screenshot Taken!" "Saved to clipboard."
else
	screenshot "$FILE" "$GEOM"
	notify-send "Screenshot Taken!" "Saved in ${DIR} as \"${FILE##*/}\"." -i ${FILE}
fi
